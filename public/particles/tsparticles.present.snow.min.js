/*! For license information please see tsparticles.preset.snow.min.js.LICENSE.txt */
!(function (e, t) {
  if ("object" == typeof exports && "object" == typeof module)
    module.exports = t(
      require("tsparticles-move-base"),
      require("tsparticles-shape-circle"),
      require("tsparticles-updater-color"),
      require("tsparticles-updater-opacity"),
      require("tsparticles-updater-out-modes"),
      require("tsparticles-updater-size"),
      require("tsparticles-updater-wobble")
    );
  else if ("function" == typeof define && define.amd)
    define([
      "tsparticles-move-base",
      "tsparticles-shape-circle",
      "tsparticles-updater-color",
      "tsparticles-updater-opacity",
      "tsparticles-updater-out-modes",
      "tsparticles-updater-size",
      "tsparticles-updater-wobble",
    ], t);
  else {
    var r =
      "object" == typeof exports
        ? t(
            require("tsparticles-move-base"),
            require("tsparticles-shape-circle"),
            require("tsparticles-updater-color"),
            require("tsparticles-updater-opacity"),
            require("tsparticles-updater-out-modes"),
            require("tsparticles-updater-size"),
            require("tsparticles-updater-wobble")
          )
        : t(
            e.window,
            e.window,
            e.window,
            e.window,
            e.window,
            e.window,
            e.window
          );
    for (var a in r) ("object" == typeof exports ? exports : e)[a] = r[a];
  }
})(this, (e, t, r, a, o, i, s) =>
  (() => {
    "use strict";
    var p = {
        565: (t) => {
          t.exports = e;
        },
        851: (e) => {
          e.exports = t;
        },
        613: (e) => {
          e.exports = r;
        },
        515: (e) => {
          e.exports = a;
        },
        509: (e) => {
          e.exports = o;
        },
        694: (e) => {
          e.exports = i;
        },
        585: (e) => {
          e.exports = s;
        },
      },
      d = {};
    function l(e) {
      var t = d[e];
      if (void 0 !== t) return t.exports;
      var r = (d[e] = { exports: {} });
      return p[e](r, r.exports, l), r.exports;
    }
    (l.d = (e, t) => {
      for (var r in t)
        l.o(t, r) &&
          !l.o(e, r) &&
          Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
      (l.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
      (l.r = (e) => {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 });
      });
    var c = {};
    return (
      (() => {
        l.r(c), l.d(c, { loadSnowPreset: () => d });
        var e = l(565),
          t = l(851),
          r = l(613),
          a = l(515),
          o = l(509),
          i = l(694),
          s = l(585);
        const p = {
          background: { color: "#333" },
          particles: {
            move: { direction: "bottom", enable: !0, random: !1, straight: !1 },
            opacity: { value: { min: 0.1, max: 0.5 } },
            size: { value: { min: 1, max: 10 } },
            wobble: { distance: 20, enable: !0, speed: { min: -5, max: 5 } },
          },
        };
        async function d(d) {
          await (0, e.loadBaseMover)(d),
            await (0, t.loadCircleShape)(d),
            await (0, r.loadColorUpdater)(d),
            await (0, a.loadOpacityUpdater)(d),
            await (0, o.loadOutModesUpdater)(d),
            await (0, i.loadSizeUpdater)(d),
            await (0, s.loadWobbleUpdater)(d),
            await d.addPreset("snow", p);
        }
      })(),
      c
    );
  })()
);
